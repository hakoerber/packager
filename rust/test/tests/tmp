

        // // Find element from element.
        // let elem_text = elem_form.find(By::Id("searchInput")).await?;

        // // Type in the search terms.
        // elem_text.send_keys("selenium").await?;

        // // Click the search button.
        // let elem_button = elem_form.find(By::Css("button[type='submit']")).await?;
        // elem_button.click().await?;

        // // Look for header to implicitly wait for the page to load.
        // driver.find(By::ClassName("firstHeading")).await?;
        // assert_eq!(driver.title().await?, "Selenium - Wikipedia");

        // Always explicitly close the browser.

        // # browser.open('/')

        // # browser.should(have.title('Packager'))
        // # browser.should(have.url(url("/")))
        // # browser.element(by.id('header')).should(have.text("Packager"))
        // # browser.element(by.id('header')).element(by.id("header-link-inventory")).click()
        // # browser.should(have.url(url("/inventory/")))
        // # browser.element(by.id('header')).element(by.id("header-link-trips")).click()
        // # browser.should(have.url(url("/trips/")))
        // # browser.element(by.id('header')).element(by.id("home")).click()
        // # browser.should(have.url(url("/")))

        // browser.open('/inventory/')

        // head = browser.element('#category-list').element("thead")
        // head.all("th").first.should(have.text("Name"))
        // head.all("th").second.should(have.text("Weight"))

        // body = browser.element('#category-list').element("tbody")
        // body.all("tr").should(have.size(1))
        // row = body.all("tr")[-1]
        // row.all("td").first.should(have.text("Sum"))
        // row.all("td").second.should(have.text("0"))

        // value = randname()

        // new_category = browser.element('#new-category')
        // new_category.element('#new-category-name').type(value)
        // new_category.submit()

        // body = browser.element('#category-list').element("tbody")
        // body.all("tr").should(have.size(2))
        // row = body.all("tr").first
        // row.all("td").first.should(have.text(value))
        // row.all("td").second.should(have.text("0"))

        // row = body.all("tr")[-1].all("td").second.should(have.text("0"))

        // browser.quit()
        // print("Success")

        // Ok(())
